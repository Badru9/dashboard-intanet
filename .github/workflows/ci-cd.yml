name: CI/CD Docker Build & Push to GHCR

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Install NPM Dependencies
        run: npm install

      - name: Generate key
        run: php artisan key:generate

      - name: Build assets
        run: npm run build

      - name: Set manual version tag
        run: |
          VERSION=$(node -p "require('./package.json').version || 'latest'")
          NAME=$(node -p "require('./package.json').name")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.NAME }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ env.NAME }}:latest
          build-args: |
            APP_NAME=${{ secrets.APP_NAME }}
            APP_ENV=${{ secrets.APP_ENV }}
            APP_KEY=${{ secrets.APP_KEY }}
            APP_DEBUG=${{ secrets.APP_DEBUG }}
            APP_URL=${{ secrets.APP_URL }}
            DB_CONNECTION=${{ secrets.DB_CONNECTION }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

      - name: Trigger Dokploy Webhook
        run: curl -X POST "${{ secrets.DOKPLOY_WEBHOOK_URL }}"
